
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CustomizeEvent.java
 *
 * Created on 4-set-2010, 9.57.19
 */
package it.freedomotic.plugins.gui;

import it.freedomotic.api.Actuator;
import it.freedomotic.api.Client;
import it.freedomotic.api.Plugin;
import it.freedomotic.app.Freedomotic;
import it.freedomotic.persistence.CommandPersistence;
import it.freedomotic.plugins.AddonLoader;
import it.freedomotic.plugins.ClientStorage;
import it.freedomotic.reactions.Command;
import it.freedomotic.reactions.Payload;
import it.freedomotic.reactions.Trigger;
import it.freedomotic.util.PropertiesPanel_1;
import java.util.Map.Entry;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;

/**
 *
 * @author enrico
 */
public class CustomizeCommand extends javax.swing.JFrame {

    ReactionList main;
    Command original;
    PropertiesPanel_1 panel;

    /**
     * Creates new form CustomizeEvent
     */
    public CustomizeCommand(ReactionList main, Command original) {
        initComponents();
        this.main = main;
        this.original = original;
        txtName.setText(original.getName());
        txtDescription.setText(original.getDescription());
        //txtDescription.setText(t.getDescription());


        panel = new PropertiesPanel_1(0, 2);
        pnlParam.add(panel);
        int row = 0;
        for (Entry e : original.getProperties().entrySet()) {
            panel.addRow();
            panel.addElement(new JTextField(e.getKey().toString()), row, 0);
            panel.addElement(new JTextField(e.getValue().toString()), row, 1);
            row++;
        }
        panel.layoutPanel();
        this.toFront();
    }

    private void enqueueReceivers() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (Client p : Freedomotic.clients.getClients()) {
            if (p instanceof Actuator) {
                model.addElement(p.getName());
            }
        }
        cmbReceiver.setModel(model);
    }

    private Command fillWithFormData(Command c) {
        c.setName(txtName.getText());
        c.setDescription(txtDescription.getText());
        if (cmbReceiver.isEnabled()) {
            Plugin plugin = (Plugin) ClientStorage.get((String) cmbReceiver.getSelectedItem());
            c.setReceiver(plugin.getReadQueue());
        } else {
            c.setReceiver(original.getReceiver());
        }
        System.out.println("receiver for  " + c.getName() + " is: " + c.getReceiver());
        for (int row = 0; row < panel.getRows(); row++) {
            String key = panel.getComponent(row, 0);
            String value = panel.getComponent(row, 1);
            c.setProperty(key, value);
        }
        return c;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        cmbReceiver = new javax.swing.JComboBox();
        txtReceiver = new javax.swing.JLabel();
        btnChangeReceiver = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlParam = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSave.setText("Save as New Command");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel1.setText("Name:");

        jLabel2.setText("Description:");

        jLabel3.setText("Command parameters:");

        btnEdit.setText("Save Changes");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        cmbReceiver.setEnabled(false);

        txtReceiver.setText("Performed by:");
        txtReceiver.setEnabled(false);

        btnChangeReceiver.setText("Change");
        btnChangeReceiver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeReceiverActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Command");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pnlParam.setLayout(new java.awt.BorderLayout());
        jScrollPane1.setViewportView(pnlParam);

        jButton1.setText("Add Parameter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtReceiver))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbReceiver, 0, 408, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChangeReceiver))
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnDelete)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtReceiver)
                    .addComponent(cmbReceiver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChangeReceiver))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnEdit)
                    .addComponent(btnSave))
                .addContainerGap())
        );

        jLabel3.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        Command c = new Command();
        c = fillWithFormData(c);
        c.setEditable(true); //sets it needs to be saved on disk
        int preSize = CommandPersistence.size();
        CommandPersistence.add(c);
        int postSize = CommandPersistence.size();
        if (preSize < postSize) {
            Freedomotic.logger.info("Command addedd correctly [" + postSize + " commands]");
        } else {
            Freedomotic.logger.severe("Error while adding a command");
        }
        main.setTargetCommand(c);
        this.dispose();

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnChangeReceiverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeReceiverActionPerformed
        enqueueReceivers();
        txtReceiver.setEnabled(true);
        cmbReceiver.setEnabled(true);
    }//GEN-LAST:event_btnChangeReceiverActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        Command c = original;
        c = fillWithFormData(c);
        c.setEditable(true);
        int preSize = CommandPersistence.size();
        CommandPersistence.remove(original);
        CommandPersistence.add(c);
        int postSize = CommandPersistence.size();
        if (preSize == postSize) {
            Freedomotic.logger.info("Command edited correctly [" + postSize + " commands]");
        } else {
            Freedomotic.logger.severe("Error while edit a command");
        }
        main.setTargetCommand(c);
        this.dispose();

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Freedomotic.logger.info("Trying to remove a commend from the list");
        CommandPersistence.remove(original);
        main.updateData();
        this.dispose();

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        panel.addRow(); //empty row
        panel.addElement(new JTextField(), panel.getRows(), 0);
        panel.addElement(new JTextField(), panel.getRows(), 1);
        panel.layoutPanel();
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangeReceiver;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbReceiver;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlParam;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtName;
    private javax.swing.JLabel txtReceiver;
    // End of variables declaration//GEN-END:variables
}
