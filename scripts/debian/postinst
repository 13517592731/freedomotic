#!/bin/sh
# postinst script for freedomotic
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
          # If the package has default file it could be sourced, so that
       # the local admin can overwrite the defaults

       [ -f "/etc/default/freedomotic" ] && . /etc/default/freedomotic

       # Sane defaults:

       [ -z "$SERVER_HOME" ] && SERVER_HOME=/etc/freedomotic
       [ -z "$SERVER_USER" ] && SERVER_USER=freedomotic
       [ -z "$SERVER_NAME" ] && SERVER_NAME="Freedomotic"
       [ -z "$SERVER_GROUP" ] && SERVER_GROUP=freedomotic

       # create user to avoid running server as root
       # 1. create group if not existing
       if ! getent group | grep -q "^$SERVER_GROUP:" ; then
          echo -n "Adding group $SERVER_GROUP.."
          addgroup --quiet --system $SERVER_GROUP 2>/dev/null ||true
          echo "..done"
       fi
       # 2. create homedir if not existing
       test -d $SERVER_HOME || mkdir $SERVER_HOME
       # 3. create user if not existing
       if ! getent passwd | grep -q "^$SERVER_USER:"; then
         echo -n "Adding system user $SERVER_USER.."
         adduser --quiet \
                 --system \
                 --ingroup $SERVER_GROUP \
                 --no-create-home \
                 --disabled-password \
                 $SERVER_USER 2>/dev/null || true
         echo "..done"
       fi
       # 4. adjust passwd entry
       usermod -c "$SERVER_NAME" \
               -d $SERVER_HOME   \
               -g $SERVER_GROUP  \
                  $SERVER_USER

#  Create correct dir and link for the librxtx-java.so
	RXTXLIB=/usr/lib/jni/librxtxSerial.so
	ARCHDIR=/etc/$SERVER_USER/serial/linux
	DESTDIR=none
	case $(uname -i) in
	i386)
		DESTDIR=i386
	;;
	i686)
		DESTDIR=i386
	;;
	arm)
		DESTDIR=arm
	;;
	amd64)
		DESTDIR=amd64
	;;
	x86_64)
		DESTDIR=x86
	;;
	unknown)
		case $(uname -m) in
		armv6l)
			DESTDIR=arm
		;;
		x86_64)
			DESTDIR=x86
		;;
		*)
			echo "ERROR: UNIDENTIFIED ARCHITECTURE FOR `uname -a`"
		;;
		esac
	;;
	*)
		echo "ERROR: DON'T KNOW WHAT TO DO WITH ARCHITECTURE `arch`"
	;;
	esac

	if [ DESTDIR != "none" ]
	then
		mkdir -p $ARCHDIR/$DESTDIR
		ln -sf $RXTXLIB $ARCHDIR/$DESTDIR/
	fi

       # 5. adjust file and directory permissions
       if ! dpkg-statoverride --list $SERVER_HOME >/dev/null
       then
           chown -R $SERVER_USER:$SERVER_GROUP /etc/$SERVER_USER
           chown -R $SERVER_USER:$SERVER_GROUP /var/lib/$SERVER_USER
           chown -R $SERVER_USER:$SERVER_GROUP /var/log/$SERVER_USER
           chown -R $SERVER_USER:$SERVER_GROUP /usr/share/$SERVER_USER

           chmod -R u=rwx,g=rwx,o= /etc/$SERVER_USER
	   chmod -R u=rwx,g=rwx,o= /var/lib/$SERVER_USER
	   chmod -R u=rwx,g=rwx,o= /var/log/$SERVER_USER
	   chmod -R u=rwx,g=rwx,o= /usr/share/$SERVER_USER
       fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
